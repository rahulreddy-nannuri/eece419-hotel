<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="hotelapp-pu" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<context:annotation-config />

	<tx:annotation-driven />

	<bean id="roomRepository" class="ubc.eece419.pod1.dao.RoomDao" />

	<bean id="userRepository" class="ubc.eece419.pod1.dao.UserDao" />

	<bean id="roomTypeRepository" class="ubc.eece419.pod1.dao.RoomTypeDao" />

	<bean id="stayRecordRepository" class="ubc.eece419.pod1.dao.StayRecordDao" />

	<bean id="reservationRepository" class="ubc.eece419.pod1.dao.ReservationDao" />
	
	<bean id="itemTypeRepository" class="ubc.eece419.pod1.dao.ItemTypeDao" />
	
	<bean id="imageRepository" class="ubc.eece419.pod1.dao.ImageDao" />
	
	<bean id="billRepository" class="ubc.eece419.pod1.dao.BillDao" />
	
	<!-- messages for validation -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages" />
		<property name="cacheSeconds" value="1" />
	</bean>

	<!--
		pre-populate db. we're still setting users in the xml, but now we can
		add more at runtime
	-->
	<bean class="ubc.eece419.pod1.config.DatabasePopulator">
		<property name="penthouseImage">
			<value>/WEB-INF/image/penthouse.jpg</value>
		</property>
		<property name="doubleBedImage">
			<value>/WEB-INF/image/double.jpg</value>
		</property>
		<property name="singleBedImage">
			<value>/WEB-INF/image/single.jpg</value>
		</property>
		<property name="studentBedImage">
			<value>/WEB-INF/image/student.jpg</value>
		</property>
		<property name="welcomeImage">
			<value>/WEB-INF/image/welcome.jpg</value>
		</property>
		<property name="users">
			<value>
				user=password,user@example.com,123 User St.
				sampledata=password,chartuser@example.com,765 Data Ave.
			</value>
		</property>
		<property name="admins">
			<value>
				admin=password,admin@example.com,234 Admin St.
			</value>
		</property>
		<property name="staff">
			<value>
				staff=password,staff@example.com,345 Staff St.
			</value>
		</property>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<security:http auto-config='true'>
		<security:intercept-url pattern="/**" access="ROLE_ANONYMOUS,ROLE_USER" />
		<security:intercept-url pattern="/favicon.ico" access="ROLE_ANONYMOUS,ROLE_USER" />
		<security:form-login login-page="/user/login" authentication-failure-url="/user/login?login_error=1" />
	</security:http>

	<security:global-method-security secured-annotations="enabled" />

	<security:authentication-provider user-service-ref="userRepository">
		<!--
			these settings are duplicated in User.encryptPassword(String, String)
		-->
		<security:password-encoder hash="sha-256">
			<security:salt-source user-property="username" />
		</security:password-encoder>
	</security:authentication-provider>

</beans>